{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","className","s","error","Message","avatar","name","message","time","styles","message_avatar","src","alt","message_body","message_author","message_text","message_time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","props","affair","affairId","_id","affairName","priority","onClick","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","onKeyPressHandler","totalUsers","input","form","onBlur","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","alert","length","trim","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","header","activeClassName","active","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.230e1e36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2yyBB\",\"message_avatar\":\"Message_message_avatar__1E5Rd\",\"message_body\":\"Message_message_body__3I5na\",\"message_author\":\"Message_message_author__1_29_\",\"message_text\":\"Message_message_text__1-QEK\",\"message_time\":\"Message_message_time__2SjVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Header_active__2-oOF\",\"header\":\"Header_header__2Lk6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair__1oW1e\",\"affairId\":\"Affairs_affairId__2LNxl\",\"affairName\":\"Affairs_affairName__1poSu\",\"affairPriority\":\"Affairs_affairPriority__thHjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Greeting_form__3D-oG\",\"input\":\"Greeting_input__2RDxU\",\"error\":\"Greeting_error__3LX9U\",\"errorMessage\":\"Greeting_errorMessage__GNk5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__jcJxg\",\"errorInput\":\"SuperInputText_errorInput__3yDL3\",\"error\":\"SuperInputText_error__Y7BJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Zjyn\",\"red\":\"SuperButton_red__20-dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2r5dw\",\"column\":\"HW4_column__2-bT9\",\"testSpanError\":\"HW4_testSpanError__2FFrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__nOdwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2wvKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__1r1n1\",\"type\":\"Error404_type__mlp1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__1GtHn\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n            <div className={s.error}>\r\n                <h1>Error 404</h1>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport styles from './Message.module.css'\r\n\r\ntype MessageProps = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst Message: React.FC<MessageProps> = ({avatar,name,message,time}) => {\r\n    return (\r\n        <div className={styles.message}>\r\n            <div className={styles.message_avatar}>\r\n                <img src={avatar} alt={'avatar'}/>\r\n            </div>\r\n            <div className={styles.message_body}>\r\n                <div className={styles.message_author}>{name}</div>\r\n                <div className={styles.message_text}>{message}</div>\r\n                <div className={styles.message_time}>{time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {AffairType} from './HW2';\r\nimport styles from './Affairs.module.css'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.affair}>\r\n            <div className={styles.affairId}>{props.affair._id}</div>\r\n            <div className={styles.affairName}>{props.affair.name}</div>\r\n            <div className={styles.affairName}>{`[${props.affair.priority}]`}</div>\r\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all')\r\n\r\n    const setHigh = () => props.setFilter('high')\r\n\r\n    const setMiddle = () => props.setFilter('middle')\r\n\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <SuperButton onClick={setAll}>All</SuperButton>\r\n            <SuperButton onClick={setHigh}>High</SuperButton>\r\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton onClick={setLow}>Low</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter((a) => a.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter((a) => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error? s.errorInput : ''} ${className? className : s.superInput}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, onKeyPressHandler, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.input\r\n\r\n    return (\r\n        <div className={s.form}>\r\n\r\n            <SuperInputText value={name} onChange={setNameCallback} onBlur={setNameCallback} onKeyPress={onKeyPressHandler}/>\r\n            {/*<input*/}\r\n            {/*    value={name}*/}\r\n            {/*    onChange={setNameCallback}*/}\r\n            {/*    onBlur={setNameCallback}*/}\r\n            {/*    onKeyPress={onKeyPressHandler}*/}\r\n            {/*    className={inputClass}*/}\r\n            {/*/>*/}\r\n            <SuperButton onClick={addUser}>add</SuperButton>\r\n            {/*<button onClick={addUser}>add</button>*/}\r\n            <span>{totalUsers}</span>\r\n            <div className={s.errorMessage}>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let name = e.currentTarget.value.trim();\r\n        if (name) {\r\n            setName(name)\r\n            setError('')\r\n        } else {\r\n            setError('Enter name!')\r\n            setName('')\r\n\r\n        }\r\n\r\n\r\n    }\r\n    const addUser = () => {\r\n        if (name) {\r\n            addUserCallback(name)\r\n            setName('')\r\n            alert(`Hello, ${name}`)\r\n        }\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([])\r\n\r\n    const addUserCallback = (name: string) => {\r\n        setUsers([...users, {_id: v1(), name: name}])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false)\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true)\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState('editable-span-value', value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6';\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react';\r\n\r\nexport const Junior = () => {\r\n    return (\r\n        <h2>Junior (ಠ‿ಠ)</h2>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\n\r\nexport const JuniorPlus = () => {\r\n    return (\r\n        <h2>Junior+ ┌(ಠ‿ಠ)┘</h2>\r\n    );\r\n};\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect} from 'react-router-dom'\r\nimport Error404 from './pages/Error404'\r\nimport PreJunior from './pages/PreJunior'\r\nimport {Junior} from './pages/Junior';\r\nimport {JuniorPlus} from './pages/JuniorPlus';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Header.module.css'\r\nimport { PATH } from './Routes'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.active}>Pre-junior</NavLink>\r\n            <NavLink to={PATH.JUNIOR} activeClassName={s.active}>Junior</NavLink>\r\n            <NavLink to={PATH.JUNIOR_PLUS} activeClassName={s.active}>Junior+</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}